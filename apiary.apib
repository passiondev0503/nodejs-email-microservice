FORMAT: 1A
HOST: http://notifications-host

# Description

Notifications is a microservice that allows to send email, sms & push notifications easily

# Notifications API

# Group SMS

## SMS [/api/push/sms]

+ Attributes (sms Base)

### Send a sms [POST]
Send a new sms to a given set of E.164-formatted phone numbers

| SMS Field   | Description                                                          |
|-------------|----------------------------------------------------------------------|
| to          | List of E.164 phone numbers which shall receive the provided message |
| from        | E.164 phone number from which the SMS message comes from             |
| message     | Body content of the SMS message                                      |

+ Request

    + Headers

            Authorization: Bearer BEWkwDA0bTTw_4dSPNI8lDPWF
    + Body

            {
                "to": ["+16512223344"],
                "from": "+34518888780",
                "message": "Hello Resonator!"
            }

+ Response 200 (application/json)

            {
                "messages": 2,
                "targets": [
                    "+15005550010",
                    "+15005550011"
                ],
                "source": "+15005550006",
                "text": "Hello there!"
            }

+ Response 500 (application/json)

            {
                "code": "InternalError",
                "message": "Could not send SMS to destination"
            }

# Group Identity

## /api/identity

+ Attributes(identity Base)

### Get requester's identity data [GET]

Retrieves the Identity data associated to the requester

+ Request

    + Headers

            Authorization: Bearer BEWkwDA0bTTw_4dSPNI8lDPWF


+ Response 200 (application/json; charset=utf-8)

    + Body

            {
                "id": "01f0000000000000003f0001",
                "channels": [],
                "devices": {
                    "email": [
                        "john@doe.com"
                    ],
                    "sms": [
                        "+9988776655"
                    ],
                    "phone": [
                        "+111222333",
                        "+333222111"
                    ],
                    "apn": [],
                    "gcm": [
                        "654C4DB3-3F68-4969-8ED2-80EA16B46EB0"
                    ]
                }
            }

+ Response 401 (application/json; charset=utf-8)

    + Body

            {
                "code": "UnauthorizedError",
                "message": "Missing authorization header"
            }

### Create a new Identity object [POST]

Creates a new Identity object with the provided data, if any

+ Request

    + Body

            {
                "devices": {
                    "sms": [],
                    "email": ["john@appleseed.com"],
                    "phone": [],
                    "apn": [],
                    "gcm": []
                },
                "channels": []
            }

+ Response 201 (application/json; charset=utf-8)

    + Body

            {
                "id": "55af67b553f14ff72a0f5e19"
            }

+ Response 500 (application/json; charset=utf-8)

    + Body

            {
                "code": "InternalError",
                "message": "Could not create requested Identity object"
            }

### Modify the Identity data associated to the requester [PUT]

Replaces the data of the Identity object associated to the requester with the provided contents

+ Request

    + Headers

            Authorization: Bearer BEWkwDA0bTTw_4dSPNI8lDPWF

    + Body

            {
                "devices": {
                "email": ["changed@doe.com"]
                },
                "channels": []
            }

+ Response 204

## /api/identity/{id}

### Retrieve the Identity data associated to an Identity identifier [GET]

+ Parameters
    + id (string)

        The ID of the desired Identity object

+ Request

    + Headers

            Authorization: Bearer BEWkwDA0bTTw_4dSPNI8lDPWF

+ Response 200 (application/json; charset=utf-8)

    + Body

            {
                "id": "01f0000000000000003f0001",
                "channels": [],
                "devices": {
                    "email": [
                        "john@doe.com"
                        ],
                    "sms": [
                        "+9988776655"
                        ],
                        "phone": [
                            "+111222333",
                            "+333222111"
                        ],
                    "apn": [],
                    "gcm": [
                        "654C4DB3-3F68-4969-8ED2-80EA16B46EB0"
                    ]
                }
            }

+ Response 401 (application/json; charset=utf-8)

    + Body

            {
                "code": "UnauthorizedError",
                "message": "Identity not found"
            }


# Group Channel

## /api/channel

+ Attributes(channel Base)

### Get the requester's channel list [GET]

Retrieves the list of Channel objects associated to the requester's Identity object

+ Request

    + Headers

            Authorization: Bearer BEWkwDA0bTTw_4dSPNI8lDPWF


+ Response 200 (application/json; charset=utf-8)

    + Body

            {
                [
                    {
                        "id": "01f0000000000000006f0001",
                        "name": "buddies"
                    },
                    {
                        "id": "01f0000000000000006f0002",
                        "name": "friends"
                    }
                ]
            }

+ Response 401 (application/json; charset=utf-8)

    + Body

            {
                "code": "UnauthorizedError",
                "message": "Missing authorization header"
            }

### Create a new Channel object [POST]

Creates a new Channel object with the provided name in the data store

+ Request

    + Body

            {
                "name": "some_name"
            }

+ Response 201 (application/json; charset=utf-8)

    + Body

            {
                "id": "54af67b322f14ff72a0f5e20"
            }

+ Response 500 (application/json; charset=utf-8)

    + Body

            {
                "code": "ConflictError",
                "message": "Missing 'name' property in channel object"
            }

## /api/channel/{id}

### Modify the data associated to a Channel object [PUT]

Replaces the data of the Channel object identified by the provided channel Id.

+ Parameters
    + id (required, string) ... The ID of the Channel object to update

+ Request

    + Headers

            Authorization: Bearer BEWkwDA0bTTw_4dSPNI8lDPWF

    + Body

            {
                "name": "new_name"
            }

+ Response 204

+ Response 409 (application/json; charset=utf-8)

    + Body

            {
                "code": "ConflictError",
                "message": "Missing 'name' property in channel object"
            }

### Delete a Channel object [DELETE]

Delete the Channel object identified by the provided channel Id.

+ Parameters
    + id (string) ... The ID of the Channel object to delete

+ Request

    + Headers

            Authorization: Bearer BEWkwDA0bTTw_4dSPNI8lDPWF

+ Response 204

+ Response 500 (application/json; charset=utf-8)

    + Body

            {
                "code": "InternalError",
                "message": "Could not delete provided channeld object"
            }

## /api/channel/{id}/identities

### Get a channel's identities list [GET]

Retrieves the list of Identity objects associated to the specified Channel object

+ Parameters
    + id (string) ... The ID of the Channel object to retrieve data from

+ Request

    + Headers

            Authorization: Bearer BEWkwDA0bTTw_4dSPNI8lDPWF

+ Response 200

    + Body

                [
                    {
                        "id": "01f0000000000000003f0002",
                        "channels": [
                            "01f0000000000000006f0002"
                        ],
                        "devices": {
                            "email": [
                                "michael@hamming.com"
                            ],
                            "sms": [
                                "444555666"
                            ],
                            "phone": [
                                "000222444",
                                "888666222"
                            ],
                            "apn": [],
                            "gcm": [
                                "654C4DB3-3F68-4969-8ED2-40FF45A33DC1"
                            ]
                        }
                    }
                ]

+ Response 500 (application/json; charset=utf-8)

    + Body

                {
                    "code": "BadRequestError",
                    "message": "Unknown provided channel identifier"
                }

## /api/channel/{channelId}/identities/{identityId}

### Remove an Identity from channel [DELETE]

Delete an Identity identifier from a Channel object

+ Parameters
    + channelId (string) ... The Channel identifier from which the Identity shall be removed
    + identityId (string) ... The Identity identifier that shall be removed from the Channel object

+ Request

     + Headers

            Authorization: Bearer BEWkwDA0bTTw_4dSPNI8lDPWF

+ Response 204

+ Response 500 (application/json; charset=utf-8)

    + Body

                {
                    "code": "InternalError",
                    "message": "Could not delete provided Identity object from channel 01f0000000000000006f0002"
                }


# Data Structures

## sms Base (object)
- phone: +11231231234 (string, required) - phone number to send the sms
- text: 'Hello world' (string, required) - text to send via sms

## identity Base (object)
- devices: {} (devices Base, required) - object containing a set notification receivers grouped by type
- channels: [] (array, required) - list of Channel object identifiers that can listen to notifications and forward them to the corresponding identites

## devices Base (object)
- sms: ['+11231231234', '+99887766543'] (array, optional) - a list of sms receivers associated to the identity
- phone: ['111222333', '333222111'] (array, optional) - a list of phone numbers to receive notifications
- email: ['john@doe.com'] (array, optional) - a list of email addresses to receive notifications
- apn: [] (array, optional) - a list of APN identifiers for iOS devices to receive push notifications
- gcm: [] (array, optional) - a list of GCM identifies for Android devices to receive push notifications

## channel Base (object)
- name: +11231231234 (string, required) - human-friendly channel identifier
- identitiesRef: ['01f0000000000000003f0001'] (array, optional) - array with identity identifiers which belong to the channel

## email Base (object)
- from: email1@email.com (string, required) - Email sender.
- to: ['email2@email.com'] (array, required) - Array which contains email addresses to send the message.
- message: 'This is the body of the email' (string, required) - Email Text Message to be sent.
